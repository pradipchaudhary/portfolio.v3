// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Skill {
    id              Int      @id @default(autoincrement()) // Unique identifier for the skill
    name            String   @unique                      // Skill name must be unique
    percentage      Int                                   // Skill proficiency percentage
    iconUrl         String?                               // Optional URL for an external icon
    iconImage       String?                               // Optional base64 or file path for an icon image
    iconImageId     String?                               // Optional ID for the icon image in a storage system
    isHighlighted   Boolean   @default(false)             // Flag to indicate if the skill is highlighted
    primaryColor    String?                                // Primary color for representing the skill
    secondaryColor  String?                                // Secondary color for representing the skill
    createdAt       DateTime @default(now())              // Timestamp when the skill was created
}


model Experience {
  id            Int   @id @default(autoincrement())   // Unique identifier for each experience
  title         String                               // Job title
  company       String                               // Company name
  companyUrl    String?                              // Optional URL for the company's website
  period        String                               // Duration (e.g., "Jan 2020 - Dec 2022")
  responsibilities String[]                           // List of responsibilities
  createdAt     DateTime @default(now())             // Timestamp for when the experience was created
  updatedAt     DateTime @updatedAt                  // Timestamp for when the experience was last updated
}

model Certification {
    id        Int     @id @default(autoincrement())
    certificationYear Int
    achieveCertifications String[] // Array of strings to store the names/details of certificates
}




